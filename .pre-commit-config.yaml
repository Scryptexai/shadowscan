# ShadowScan Pre-commit Configuration
# Advanced Security Scanning Framework
# Author: Ghost Attacker <ghost@attacker.dev>

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-ast
      - id: check-byte-order-marker
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-symlinks
      - id: debug-statements
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]
      - id: detect-private-key
      - id: fix-encoding-pragma
        args: [--remove]
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: requirements-txt-fixer
      - id: sort-simple-yaml
      - id: file-contents-sorter

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3.11
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: Sort imports with isort
        args: [--profile=black, --line-length=88]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        name: Lint with flake8
        additional_dependencies:
          - flake8-bugbear
          - flake8-docstrings
          - flake8-import-order
          - flake8-colors
          - pep8-naming
        args:
          - --max-line-length=88
          - --extend-ignore=E203,E266,E501,W503,F403,F401
          - --max-complexity=18
          - --select=B,C,E,F,W,T4,B9

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        name: Type check with MyPy
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-colorama
          - types-tabulate
          - types-click
        args:
          - --ignore-missing-imports
          - --install-types
          - --non-interactive

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Security scan with Bandit
        args:
          - -r
          - shadowscan/
          - -f
          - json
          - -o
          - bandit-report.json
        exclude: ^tests/

  # Dependency vulnerability scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        name: Check dependencies with Safety
        files: requirements.*\.txt$

  # Documentation linting
  - repo: https://github.com/pycqa/doc8
    rev: v1.1.1
    hooks:
      - id: doc8
        name: Lint documentation
        args: [--max-line-length=88]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        name: Lint YAML files
        args:
          - --format=parsable
          - --strict

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfile
        args: [--ignore=DL3008,--ignore=DL3009,--ignore=DL3015]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        name: Lint shell scripts

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        name: Lint Markdown files
        args: [--fix]

  # Python upgrade syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.10.1
    hooks:
      - id: pyupgrade
        name: Upgrade Python syntax
        args: [--py38-plus]

  # Unused imports
  - repo: https://github.com/pycqa/autoflake
    rev: v2.2.0
    hooks:
      - id: autoflake
        name: Remove unused imports
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --ignore-init-module-imports

  # Dead code detection
  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.9.1
    hooks:
      - id: vulture
        name: Find dead code
        args: [--min-confidence=80]

  # Git commit message linting
  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.19.1
    hooks:
      - id: gitlint
        name: Lint git commit messages

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        args: [--baseline, .secrets.baseline]
        exclude: package.lock.json

  # Python docstring coverage
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        name: Check docstring coverage
        args:
          - --verbose
          - --ignore-init-method
          - --ignore-module
          - --ignore-nested-functions
          - --ignore-magic
          - --ignore-regex=^get$
          - --ignore-regex=^mock_.*$
          - --ignore-regex=.*_test$
          - --fail-under=80
          - shadowscan

  # Python complexity
  - repo: https://github.com/xenon-monitoring/xenon
    rev: v0.9.0
    hooks:
      - id: xenon
        name: Monitor code complexity
        args: [--max-average=A, --max-modules=B, --max-absolute=B]

# Configuration for specific hooks
ci:
  autofix_prs: true
  autofix_commit_msg: |
    ðŸ¤– [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autoupdate_branch: ''
  autoupdate_commit_msg: 'ðŸ¤– [pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
