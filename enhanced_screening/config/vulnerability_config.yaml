# Enhanced Screening Configuration
# Advanced vulnerability detection with deep scanning capabilities

vulnerability_types:
  # Financial Vulnerabilities
  financial:
    reentrancy:
      name: "Reentrancy Attack"
      severity: "CRITICAL"
      category: "financial"
      description: "External calls before state updates can drain funds"
      deep_scan: true
      patterns:
        - "call.value"
        - "external_call"
        - "state_update_after_call"
      detection_methods:
        - "pattern_matching"
        - "symbolic_execution"
        - "taint_analysis"
    
    flashloan:
      name: "Flash Loan Attack"
      severity: "CRITICAL"
      category: "financial"
      description: "Price manipulation using flash loans"
      deep_scan: true
      patterns:
        - "price_oracle"
        - "token_swap"
        - "liquidity_pool"
      detection_methods:
        - "defi_protocol_analysis"
        - "price_feed_analysis"
        - "liquidity_modeling"
    
    integer_overflow:
      name: "Integer Overflow/Underflow"
      severity: "HIGH"
      category: "financial"
      description: "Arithmetic operations can exceed storage limits"
      deep_scan: true
      patterns:
        - "arithmetic_operation"
        - "unchecked_math"
        - "storage_overflow"
      detection_methods:
        - "static_analysis"
        - "bounded_model_checking"
        - "constraint_solving"
    
    timestamp_dependency:
      name: "Timestamp Dependency"
      severity: "MEDIUM"
      category: "financial"
      description: "Reliance on block.timestamp for critical operations"
      patterns:
        - "block.timestamp"
        - "time_lock"
        - "deadline_check"
      detection_methods:
        - "temporal_analysis"
        - "race_condition_detection"
    
    front_running:
      name: "Front Running"
      severity: "HIGH"
      category: "financial"
      description: "Transaction order manipulation for profit"
      patterns:
        - "mempod_analysis"
        - "gas_price"
        - "transaction_ordering"
      detection_methods:
        - "mempod_monitoring"
        - "mev_detection"
        - "gas_analysis"

  # Access Control Vulnerabilities
  access_control:
    ownership_hijack:
      name: "Ownership Hijacking"
      severity: "CRITICAL"
      category: "access_control"
      description: "Unauthorized ownership transfer or privilege escalation"
      deep_scan: true
      patterns:
        - "transferOwnership"
        - "onlyOwner"
        - "privilege_escalation"
      detection_methods:
        - "privilege_analysis"
        - "state_machine_analysis"
        - "access_pattern_detection"
    
    access_control_bypass:
      name: "Access Control Bypass"
      severity: "HIGH"
      category: "access_control"
      description: "Circumventing access restrictions"
      deep_scan: true
      patterns:
        - "modifier_bypass"
        - "unchecked_caller"
        - "privilege_escalation"
      detection_methods:
        - "control_flow_analysis"
        - "modifier_analysis"
        - "call_graph_analysis"
    
    unprotected_function:
      name: "Unprotected Critical Function"
      severity: "MEDIUM"
      category: "access_control"
      description: "Sensitive functions lack access controls"
      patterns:
        - "critical_function"
        - "missing_modifier"
        - "public_sensitive"
      detection_methods:
        - "function_sensitivity_analysis"
        - "access_control_verification"
    
    delegatecall_injection:
      name: "Delegatecall Injection"
      severity: "CRITICAL"
      category: "access_control"
      description: "Malicious delegatecall to arbitrary contracts"
      deep_scan: true
      patterns:
        - "delegatecall"
        - "proxy_contract"
        - "code_injection"
      detection_methods:
        - "proxy_analysis"
        - "code_integrity_check"
        - "call_target_validation"

  # Logical Vulnerabilities
  logical:
    oracle_manipulation:
      name: "Oracle Manipulation"
      severity: "HIGH"
      category: "logical"
      description: "Manipulating price oracles for profit"
      deep_scan: true
      patterns:
        - "price_oracle"
        - "external_price_feed"
        - "manipulatable_data"
      detection_methods:
        - "oracle_source_analysis"
        - "price_feed_verification"
        - "market_manipulation_detection"
    
    gas_limit_griefing:
      name: "Gas Limit Griefing"
      severity: "MEDIUM"
      category: "logical"
      description: "Forcing transactions to run out of gas"
      patterns:
        - "gas_limit"
        - "loop_vulnerability"
        - "unbounded_operation"
      detection_methods:
        - "gas_analysis"
        - "loop_detection"
        - "complexity_analysis"
    
    denial_of_service:
      name: "Denial of Service"
      severity: "MEDIUM"
      category: "logical"
      description: "Preventing normal contract operation"
      patterns:
        - "unbounded_loop"
        - "storage_overflow"
        - "resource_exhaustion"
      detection_methods:
        - "resource_analysis"
        - "availability_assessment"
        - "stress_testing"
    
    race_condition:
      name: "Race Condition"
      severity: "HIGH"
      category: "logical"
      description: "Concurrent access leading to inconsistent state"
      deep_scan: true
      patterns:
        - "state_reentrancy"
        - "concurrent_access"
        - "ordering_dependency"
      detection_methods:
        - "concurrency_analysis"
        - "state_consistency_check"
        - "transaction_ordering_analysis"

  # Cryptographic Vulnerabilities
  cryptographic:
    weak_randomness:
      name: "Weak Randomness"
      severity: "MEDIUM"
      category: "cryptographic"
      description: "Predictable random number generation"
      patterns:
        - "blockhash_random"
        - "timestamp_random"
        - "predictable_seed"
      detection_methods:
        - "randomness_analysis"
        - "entropy_assessment"
        - "predictability_testing"
    
    signature_malleability:
      name: "Signature Malleability"
      severity: "HIGH"
      category: "cryptographic"
      description: "Manipulating transaction signatures"
      patterns:
        - "ecdsa_signature"
        - "signature_verification"
        - "malleable_signature"
      detection_methods:
        - "signature_analysis"
        - "cryptographic_verification"
        - "malleability_detection"
    
    hardcoded_secrets:
      name: "Hardcoded Secrets"
      severity: "CRITICAL"
      category: "cryptographic"
      description: "Secrets embedded in contract code"
      deep_scan: true
      patterns:
        - "private_key"
        - "secret_value"
        - "hardcoded_constant"
      detection_methods:
        - "secret_detection"
        - "constant_analysis"
        - "reverse_engineering"

  # Economic Vulnerabilities
  economic:
    arbitrage_opportunity:
      name: "Arbitrage Opportunity"
      severity: "MEDIUM"
      category: "economic"
      description: "Price differences allowing risk-free profit"
      patterns:
        - "price_discrepancy"
        - "exchange_rate"
        - "arbitrage_path"
      detection_methods:
        - "price_analysis"
        - "exchange_monitoring"
        - "profitability_calculation"
    
    sandwich_attack:
      name: "Sandwich Attack"
      severity: "MEDIUM"
      category: "economic"
      description: "Front and back running large trades"
      patterns:
        - "large_transaction"
        - "dex_liquidity"
        - "price_impact"
      detection_methods:
        - "mempod_analysis"
        - "liquidity_assessment"
        - "price_impact_analysis"
    
    mev_extraction:
      name: "MEV Extraction"
      severity: "HIGH"
      category: "economic"
      description: "Miner Extractable Value opportunities"
      deep_scan: true
      patterns:
        - "transaction_ordering"
        - "block_space_auction"
        - "priority_gas"
      detection_methods:
        - "mev_detection"
        - "order_flow_analysis"
        - "auction_analysis"
    
    fee_manipulation:
      name: "Fee Manipulation"
      severity: "MEDIUM"
      category: "economic"
      description: "Manipulation of fee mechanisms"
      patterns:
        - "fee_structure"
        - "fee_calculation"
        - "fee_bypass"
      detection_methods:
        - "fee_analysis"
        - "economic_modeling"
        - "protocol_analysis"
    
    liquidity_pool:
      name: "Liquidity Pool Vulnerability"
      severity: "HIGH"
      category: "economic"
      description: "Vulnerabilities in liquidity pool mechanisms"
      deep_scan: true
      patterns:
        - "liquidity_pool"
        - "amm_protocol"
        - "impermanent_loss"
        - "concentrated_liquidity"
      detection_methods:
        - "liquidity_analysis"
        - "amm_modeling"
        - "economic_simulation"
    
    token_approval:
      name: "Token Approval Vulnerability"
      severity: "MEDIUM"
      category: "economic"
      description: "Unsafe token approval mechanisms"
      patterns:
        - "approve_function"
        - "allowance_management"
        - "infinite_approval"
      detection_methods:
        - "erc20_analysis"
        - "access_control_analysis"
        - "token_flow_analysis"

  # Protocol Vulnerabilities
  protocol:
    proxy_collision:
      name: "Proxy Collision"
      severity: "CRITICAL"
      category: "protocol"
      description: "Multiple proxy contracts affecting same storage"
      deep_scan: true
      patterns:
        - "proxy_pattern"
        - "storage_collision"
        - "implementation_conflict"
      detection_methods:
        - "proxy_analysis"
        - "storage_layout_analysis"
        - "collision_detection"
    
    upgrade_vulnerability:
      name: "Upgrade Vulnerability"
      severity: "HIGH"
      category: "protocol"
      description: "Insecure upgrade mechanisms"
      patterns:
        - "upgrade_function"
        - "implementation_change"
        - "logic_contract"
      detection_methods:
        - "upgrade_analysis"
        - "implementation_verification"
        - "rollback_detection"
    
    initialization_vulnerability:
      name: "Initialization Vulnerability"
      severity: "HIGH"
      category: "protocol"
      description: "Improper contract initialization"
      patterns:
        - "constructor"
        - "initializer"
        - "initialization_check"
      detection_methods:
        - "initialization_analysis"
        - "constructor_verification"
        - "reinitialization_detection"
    
    bridge_exploit:
      name: "Bridge Exploit"
      severity: "CRITICAL"
      category: "protocol"
      description: "Cross-chain bridge vulnerabilities"
      deep_scan: true
      patterns:
        - "cross_chain_bridge"
        - "token_mint_burn"
        - "message_relay"
        - "validator_set"
      detection_methods:
        - "bridge_analysis"
        - "cross_chain_verification"
        - "validator_analysis"
    
    governance_attack:
      name: "Governance Attack"
      severity: "HIGH"
      category: "protocol"
      description: "Attacks on governance mechanisms"
      patterns:
        - "voting_mechanism"
        - "proposal_system"
        - "quorum_requirements"
        - "token_delegation"
      detection_methods:
        - "governance_analysis"
        - "voting_simulation"
        - "proposal_analysis"
    
    nft_marketplace:
      name: "NFT Marketplace Vulnerability"
      severity: "MEDIUM"
      category: "protocol"
      description: "Vulnerabilities in NFT marketplace contracts"
      patterns:
        - "nft_marketplace"
        - "auction_mechanism"
        - "royalty_system"
        - "listing_management"
      detection_methods:
        - "nft_analysis"
        - "marketplace_verification"
        - "auction_analysis"
    
    staking_vulnerability:
      name: "Staking Vulnerability"
      severity: "MEDIUM"
      category: "protocol"
      description: "Vulnerabilities in staking mechanisms"
      patterns:
        - "staking_mechanism"
        - "reward_distribution"
        - "yield_farming"
        - "pool_management"
      detection_methods:
        - "staking_analysis"
        - "reward_verification"
        - "pool_modeling"
    
    vesting_contract:
      name: "Vesting Contract Vulnerability"
      severity: "MEDIUM"
      category: "protocol"
      description: "Vulnerabilities in token vesting contracts"
      patterns:
        - "vesting_schedule"
        - "token_release"
        - "cliff_period"
        - "beneficiary_management"
      detection_methods:
        - "vesting_analysis"
        - "schedule_verification"
        - "token_flow_analysis"
    
    multisig_weakness:
      name: "Multisig Weakness"
      severity: "MEDIUM"
      category: "protocol"
      description: "Weaknesses in multisig wallet implementations"
      patterns:
        - "multisig_wallet"
        - "threshold_signature"
        - "owner_management"
        - "transaction_execution"
      detection_methods:
        - "multisig_analysis"
        - "threshold_verification"
        - "signature_validation"
    
    underflow:
      name: "Integer Underflow"
      severity: "HIGH"
      category: "protocol"
      description: "Subtraction operations that can wrap around zero"
      patterns:
        - "subtraction_operation"
        - "unsigned_integer"
        - "wraparound"
        - "underflow_condition"
      detection_methods:
        - "arithmetic_analysis"
        - "range_verification"
        - "bounded_checking"

# Deep Scanning Configuration
deep_scanning:
  enabled: true
  intensity_levels:
    basic: "Standard vulnerability detection"
    deep: "Enhanced analysis with symbolic execution"
    intensive: "Comprehensive analysis with formal verification"
  
  analysis_methods:
    symbolic_execution:
      enabled: true
      timeout: 300
      depth: 50
    
    taint_analysis:
      enabled: true
      sources: ["user_input", "external_call", "storage"]
      sinks: ["state_change", "transfer", "external_call"]
    
    constraint_solving:
      enabled: true
      solver: "z3"
      timeout: 600
    
    formal_verification:
      enabled: true
      properties: ["safety", "liveness", "fairness"]
    
    dynamic_analysis:
      enabled: true
      test_cases: 1000
      coverage_target: 95

# Ecosystem Analysis
ecosystem_analysis:
  enabled: true
  depth_levels:
    direct: "Direct contract interactions only"
    extended: "Include 1st degree relationships"
    comprehensive: "Include all ecosystem relationships"
  
  relationship_types:
    token_transfers: true
    dex_interactions: true
    oracle_dependencies: true
    proxy_relationships: true
    governance_connections: true
    lending_protocol: true
    yield_farming: true
    nft_marketplace: true
    bridge_contracts: true